{"version":3,"file":"static/js/17.4c257136.chunk.js","mappings":"6LAGaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BAKpB,C,sKChBYC,EAAOC,EAAAA,GAAAA,GAAH,2CAIJC,EAAWD,EAAAA,GAAAA,GAAH,6EAKRE,GAAoBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,8H,mBCkB9B,EAzBkB,SAAC,GAA2B,IAAzBI,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,8BACGF,GAEC,SAACf,EAAA,EAAD,KAEA,SAACS,EAAD,UACGK,EAASI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACZ,SAACV,EAAD,WACE,SAACC,EAAD,CACEU,GAAE,iBAAYH,GACdI,MAAO,CAAEC,KAAMR,EAASS,UAF1B,SAIGL,GAASC,KALCF,EADH,OAcvB,E,UCGD,EA3Ba,WACX,OAA4CO,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,GAAa,GADG,mBAGeG,EAAAA,EAAAA,MAHf,OAGRN,EAHQ,OAIdC,EAAkBD,GAJJ,gDAMdO,QAAQC,IAAR,MANc,yBAQdL,GAAa,GARC,4EAAH,qDAWfE,GACD,GAAE,KAGD,6BACE,wBAAI,oBACJ,SAAC,EAAD,CAAWlB,SAAUa,EAAgBZ,QAASc,MAGnD,C,mMChBDO,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAICJ,EAAiB,mCAAG,sGACRG,EAAAA,EAAAA,IAAA,oCAAuCC,IAD/B,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAgBjBC,EAAY,mCAAG,WAAMC,GAAN,yFACHL,EAAAA,EAAAA,IAAA,iBACXK,EADW,oBACQJ,EADR,oBADG,uBAClBC,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDASZI,EAAU,mCAAG,WAAMD,GAAN,yFACDL,EAAAA,EAAAA,IAAA,iBACXK,EADW,4BACgBJ,EADhB,oBADC,uBAChBC,EADgB,EAChBA,KADgB,kBAKjBA,EAAKK,MALY,2CAAH,sDAUVC,EAAe,mCAAG,WAAMH,GAAN,yFACNL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAA+CJ,IADzC,uBACrBC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,sDAOfM,EAAe,mCAAG,WAAMC,GAAN,yFACNV,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACiBS,EADjB,+CADM,uBACrBR,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["components/Loader/Loader.js","components/movieList/MovieList.styled.js","components/movieList/MovieList.js","components/pages/Home/Home.js","components/services/api.js"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 15px 0;\n`;\n\nexport const ListItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\nexport const TrendingMovieLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  :hover {\n    color: #080ba1;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { TrendingMovieLink, List, ListItem } from './MovieList.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieList = ({ trending, loading }) => {\n  const location = useLocation();\n  return (\n    <>\n      {loading ? (\n        // <div>Loading</div>\n        <Loader />\n      ) : (\n        <List>\n          {trending.map(({ id, title, name }) => (\n            <ListItem key={id}>\n              <TrendingMovieLink\n                to={`movies/${id}`}\n                state={{ from: location.pathname }}\n              >\n                {title || name}\n              </TrendingMovieLink>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  trending: PropTypes.arrayOf(PropTypes.object),\n  loading: PropTypes.bool,\n};\n","import { useState, useEffect } from 'react';\nimport MovieList from 'components/movieList/MovieList';\nimport { getTrendingMovies } from '../../services/api';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const trendingMovies = await getTrendingMovies();\n        setTrendingMovies(trendingMovies);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <MovieList trending={trendingMovies} loading={isLoading} />\n    </main>\n  );\n};\n\nexport default Home;\n","// Ключ API\n// 196e9f0eb847d71bcd538c7986b0c3a8\n// Ключ доступа к API\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxOTZlOWYwZWI4NDdkNzFiY2Q1MzhjNzk4NmIwYzNhOCIsInN1YiI6IjY0NmZjNDNiMTNhMzIwMDBiZjUxYTE4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.5e8MkLdRQoMBichLyF5I5EqI9gZ1mDxWWPNrLe5xMW0\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '196e9f0eb847d71bcd538c7986b0c3a8';\n\n//trending movies request\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n//movie details request\n\n// export const getMovieById = async movieId => {\n//   const res = await axios\n//     .get(`/movie/${movieId}?api_key=${KEY}`)\n//     .catch(error => {\n//       throw new Error('Oops... seems like an error occured.');\n//     });\n//   return res.data;\n// };\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\n//cast info request\n\nexport const getCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\n\n//reviews request\n\nexport const getFetchReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return data.results;\n};\n\n//search movies request\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n"],"names":["Loader","color","height","width","wrapperStyle","position","top","left","transform","List","styled","ListItem","TrendingMovieLink","Link","trending","loading","location","useLocation","map","id","title","name","to","state","from","pathname","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","useEffect","fetchData","getTrendingMovies","console","log","axios","KEY","data","results","getMovieById","movieId","getCredits","cast","getFetchReviews","getMoviesByName","query"],"sourceRoot":""}