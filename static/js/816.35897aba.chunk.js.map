{"version":3,"file":"static/js/816.35897aba.chunk.js","mappings":"8LAGaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BAKpB,C,6NCjBYC,EAAWC,EAAAA,GAAAA,GAAH,2GAORC,EAAUD,EAAAA,GAAAA,QAAH,6CAIPE,EAAOF,EAAAA,GAAAA,GAAH,2F,mBC2DjB,EA/Da,WACX,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,MAAjC,eAAOG,EAAP,KAAaC,EAAb,KAgBA,IAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBJ,GAAa,GADG,mBAGKK,EAAAA,EAAAA,IAAWT,GAHhB,OAGRK,EAHQ,OAIdC,EAAQD,GAJM,gDAMdK,QAAQC,IAAR,MANc,yBAQdP,GAAa,GARC,4EAAH,qDAWfI,GACD,GAAE,CAACR,IACCK,EAIL,OACE,UAACP,EAAD,WACGK,GAEC,SAAChB,EAAA,EAAD,KAEA,SAACY,EAAD,UACGM,EAAKO,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC7BC,EAAWH,EAjCZ,kCAiCsCA,EAAeI,EAC1D,OACE,UAACtB,EAAD,YACE,gBAAKuB,IAAKF,EAAUG,IAAKL,EAAMzB,MAAO,IAAKD,OAAQ,OACnD,4BACE,wBACE,0BAAO0B,MAERC,GACC,0BACE,uBAAG,gBACH,4BAAM,IAAEA,SAGV,0BACE,uBAAG,gBACH,0BAAM,qBAdCH,EAoBlB,OAGHR,EAAKgB,SACL,uBAAG,wEAIV,C,mMCzDDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAICC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,oCAAuCC,IAD/B,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAgBjBC,EAAY,mCAAG,WAAM3B,GAAN,yFACHsB,EAAAA,EAAAA,IAAA,iBACXtB,EADW,oBACQuB,EADR,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDASZhB,EAAU,mCAAG,WAAMT,GAAN,yFACDsB,EAAAA,EAAAA,IAAA,iBACXtB,EADW,4BACgBuB,EADhB,oBADC,uBAChBE,EADgB,EAChBA,KADgB,kBAKjBA,EAAKpB,MALY,2CAAH,sDAUVuB,EAAe,mCAAG,WAAM5B,GAAN,yFACNsB,EAAAA,EAAAA,IAAA,iBAAoBtB,EAApB,4BAA+CuB,IADzC,uBACrBE,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,sDAOfG,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACiBO,EADjB,+CADM,uBACrBL,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["components/Loader/Loader.js","components/cast/Cast.styled.js","components/cast/Cast.js","components/services/api.js"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  justify-content: start;\n`;\n\nexport const Section = styled.section`\n  padding: 15px 10;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 15px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from '../services/api';\nimport noPhoto from '../images/noPhoto2.jpg';\nimport { ListItem, Section, List } from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const cast = await getCredits(movieId);\n        setCast(cast);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <Section>\n      {isLoading ? (\n        // <div>Loading...</div>\n        <Loader />\n      ) : (\n        <List>\n          {cast.map(({ id, profile_path, name, character }) => {\n            const imageSRC = profile_path ? IMAGEURL + profile_path : noPhoto;\n            return (\n              <ListItem key={id}>\n                <img src={imageSRC} alt={name} width={200} height={300} />\n                <div>\n                  <p>\n                    <span>{name}</span>\n                  </p>\n                  {character ? (\n                    <p>\n                      <b>Character:</b>\n                      <span> {character}</span>\n                    </p>\n                  ) : (\n                    <p>\n                      <b>Character:</b>\n                      <span> Unknown</span>\n                    </p>\n                  )}\n                </div>\n              </ListItem>\n            );\n          })}\n        </List>\n      )}\n      {!cast.length && (\n        <p>There is no information about the cast of this film yet. Sorry...</p>\n      )}\n    </Section>\n  );\n};\n\nexport default Cast;\n","// Ключ API\n// 196e9f0eb847d71bcd538c7986b0c3a8\n// Ключ доступа к API\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxOTZlOWYwZWI4NDdkNzFiY2Q1MzhjNzk4NmIwYzNhOCIsInN1YiI6IjY0NmZjNDNiMTNhMzIwMDBiZjUxYTE4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.5e8MkLdRQoMBichLyF5I5EqI9gZ1mDxWWPNrLe5xMW0\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '196e9f0eb847d71bcd538c7986b0c3a8';\n\n//trending movies request\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n//movie details request\n\n// export const getMovieById = async movieId => {\n//   const res = await axios\n//     .get(`/movie/${movieId}?api_key=${KEY}`)\n//     .catch(error => {\n//       throw new Error('Oops... seems like an error occured.');\n//     });\n//   return res.data;\n// };\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\n//cast info request\n\nexport const getCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\n\n//reviews request\n\nexport const getFetchReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return data.results;\n};\n\n//search movies request\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n"],"names":["Loader","color","height","width","wrapperStyle","position","top","left","transform","ListItem","styled","Section","List","movieId","useParams","useState","isLoading","setIsLoading","cast","setCast","useEffect","fetchData","getCredits","console","log","map","id","profile_path","name","character","imageSRC","noPhoto","src","alt","length","axios","KEY","getTrendingMovies","data","results","getMovieById","getFetchReviews","getMoviesByName","query"],"sourceRoot":""}