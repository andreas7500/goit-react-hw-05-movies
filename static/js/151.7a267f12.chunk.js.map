{"version":3,"file":"static/js/151.7a267f12.chunk.js","mappings":"8LAGaA,EAAS,WACpB,OACE,+BACE,SAAC,KAAD,CACEC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,aAAc,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,4BAKpB,C,gLCjBYC,EAAOC,EAAAA,GAAAA,GAAH,2HAQJC,EAAUD,EAAAA,GAAAA,IAAH,+DAKPE,EAAUF,EAAAA,GAAAA,QAAH,+C,SC+BpB,EAxCgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,GAAa,GADG,mBAGKG,EAAAA,EAAAA,IAAgBT,GAHrB,OAGRU,EAHQ,OAIdN,EAAWM,GAJG,gDAMdC,QAAQC,IAAR,KAAe,4BAND,yBAQdN,GAAa,GARC,4EAAH,qDAWfE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAa,SAAClB,EAAA,EAAD,KACd,UAACY,EAAD,WACGI,IACC,SAACL,EAAD,UACGK,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACpB,EAAD,YACE,wBAAKkB,KACL,uBAAIC,MAFKC,EADA,MAQI,KAAb,OAAPb,QAAO,IAAPA,OAAA,EAAAA,EAASc,UAAgB,uBAAG,iCAIpC,C,mMChCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAICC,EAAiB,mCAAG,sGACRF,EAAAA,EAAAA,IAAA,oCAAuCC,IAD/B,uBACvBT,EADuB,EACvBA,KADuB,kBAExBA,EAAKW,SAFmB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMtB,GAAN,uFACRkB,EAAAA,EAAAA,IAAA,iBACDlB,EADC,oBACkBmB,IACjCI,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAM,uCACjB,IALuB,cACpBC,EADoB,yBAMnBA,EAAIhB,MANe,2CAAH,sDAWZiB,EAAU,mCAAG,WAAM3B,GAAN,yFACDkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,4BACgBmB,EADhB,oBADC,uBAChBT,EADgB,EAChBA,KADgB,kBAKjBA,EAAKkB,MALY,2CAAH,sDAUVnB,EAAe,mCAAG,WAAMT,GAAN,yFACNkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA+CmB,IADzC,uBACrBT,EADqB,EACrBA,KADqB,kBAEtBA,EAAKW,SAFiB,2CAAH,sDAOfQ,EAAe,mCAAG,WAAMC,GAAN,yFACNZ,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACiBW,EADjB,+CADM,uBACrBpB,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,qD","sources":["components/Loader/Loader.js","components/reviews/Reviews.styled.js","components/reviews/Reviews.js","components/services/api.js"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  text-align: justify;\n  list-style: none;\n  :not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  margin-top: 10px;\n  padding: 10px;\n`;\n\nexport const Section = styled.section`\n  padding: 15px 10px;\n`;\n","import { getFetchReviews } from '../services/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { Item, Section, Wrapper } from './/Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getFetchReviews(movieId);\n        setReviews(data);\n      } catch (e) {\n        console.log(e, 'There has been a mistake');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <Section>\n        {reviews && (\n          <Wrapper>\n            {reviews.map(({ author, content, id }) => (\n              <Item key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </Item>\n            ))}\n          </Wrapper>\n        )}\n        {reviews?.length === 0 && <p>There is no information</p>}\n      </Section>\n    </>\n  );\n};\nexport default Reviews;\n","// Ключ API\n// 196e9f0eb847d71bcd538c7986b0c3a8\n// Ключ доступа к API\n// eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxOTZlOWYwZWI4NDdkNzFiY2Q1MzhjNzk4NmIwYzNhOCIsInN1YiI6IjY0NmZjNDNiMTNhMzIwMDBiZjUxYTE4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.5e8MkLdRQoMBichLyF5I5EqI9gZ1mDxWWPNrLe5xMW0\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '196e9f0eb847d71bcd538c7986b0c3a8';\n\n//trending movies request\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n//movie details request\n\nexport const getMovieById = async movieId => {\n  const res = await axios\n    .get(`/movie/${movieId}?api_key=${KEY}`)\n    .catch(error => {\n      throw new Error('Oops... seems like an error occured.');\n    });\n  return res.data;\n};\n\n//cast info request\n\nexport const getCredits = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\n\n//reviews request\n\nexport const getFetchReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return data.results;\n};\n\n//search movies request\n\nexport const getMoviesByName = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return data;\n};\n"],"names":["Loader","color","height","width","wrapperStyle","position","top","left","transform","Item","styled","Wrapper","Section","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","fetchData","getFetchReviews","data","console","log","map","author","content","id","length","axios","KEY","getTrendingMovies","results","getMovieById","catch","error","Error","res","getCredits","cast","getMoviesByName","query"],"sourceRoot":""}